; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\fifo.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\fifo.d --cpu=Cortex-M0 --apcs=interwork -O3 -Otime --diag_suppress=9931 -IC:\CAD\Keil_v5\ARM\RV31\INC -IC:\CAD\Keil_v5\ARM\CMSIS\Include -IC:\CAD\Keil_v5\ARM\Inc\ST\STM32F0xx -D__UVISION_VERSION=514 -DSTM32F030 --omf_browse=.\objects\fifo.crf fifo.c]
                          THUMB

                          AREA ||i.FIFO_Clear||, CODE, READONLY, ALIGN=1

                  FIFO_Clear PROC
;;;25     
;;;26     void FIFO_Clear(FIFO *Queue)
000000  2100              MOVS     r1,#0
;;;27     {
;;;28     	Queue->Head = Queue->Tail = 0;
000002  7081              STRB     r1,[r0,#2]
000004  7041              STRB     r1,[r0,#1]
;;;29     }
000006  4770              BX       lr
;;;30     
                          ENDP


                          AREA ||i.FIFO_Read||, CODE, READONLY, ALIGN=1

                  FIFO_Read PROC
;;;51     
;;;52     uint8_t FIFO_Read(FIFO *Queue, FIFO_Data_t *data)
000000  7842              LDRB     r2,[r0,#1]
000002  7883              LDRB     r3,[r0,#2]
000004  429a              CMP      r2,r3
;;;53     {
000006  d00a              BEQ      |L2.30|
;;;54     	if (FIFO_ReadAvail(Queue))
;;;55     	{
;;;56     		Queue->Tail = FIFO_INC(Queue->Tail,Queue->SizeMask);	
000008  7882              LDRB     r2,[r0,#2]
00000a  7803              LDRB     r3,[r0,#0]
00000c  1c52              ADDS     r2,r2,#1
00000e  401a              ANDS     r2,r2,r3
000010  7082              STRB     r2,[r0,#2]
;;;57     		*data = FIFO_BUF(Queue)[Queue->Tail];
000012  7882              LDRB     r2,[r0,#2]
000014  1cc0              ADDS     r0,r0,#3
000016  5c10              LDRB     r0,[r2,r0]
000018  7008              STRB     r0,[r1,#0]
;;;58     		return 1;
00001a  2001              MOVS     r0,#1
;;;59     	}
;;;60     	return 0;	
;;;61     }
00001c  4770              BX       lr
                  |L2.30|
00001e  2000              MOVS     r0,#0                 ;60
000020  4770              BX       lr
;;;62     
                          ENDP


                          AREA ||i.FIFO_ReadAvail||, CODE, READONLY, ALIGN=1

                  FIFO_ReadAvail PROC
;;;46     
;;;47     uint8_t FIFO_ReadAvail(FIFO *Queue)
000000  7841              LDRB     r1,[r0,#1]
;;;48     {
;;;49     	return(Queue->Head != Queue->Tail);
000002  7880              LDRB     r0,[r0,#2]
000004  4281              CMP      r1,r0
000006  d001              BEQ      |L3.12|
000008  2001              MOVS     r0,#1
;;;50     }
00000a  4770              BX       lr
                  |L3.12|
00000c  2000              MOVS     r0,#0                 ;49
00000e  4770              BX       lr
;;;51     
                          ENDP


                          AREA ||i.FIFO_Write||, CODE, READONLY, ALIGN=1

                  FIFO_Write PROC
;;;35     
;;;36     uint8_t FIFO_Write(FIFO *Queue, FIFO_Data_t data)
000000  b410              PUSH     {r4}
000002  7843              LDRB     r3,[r0,#1]
000004  7802              LDRB     r2,[r0,#0]
000006  1c5b              ADDS     r3,r3,#1
000008  7884              LDRB     r4,[r0,#2]
00000a  4013              ANDS     r3,r3,r2
00000c  42a3              CMP      r3,r4
;;;37     {
00000e  d009              BEQ      |L4.36|
;;;38     	if(FIFO_WriteAvail(Queue))
;;;39     	{
;;;40     		Queue->Head = FIFO_INC(Queue->Head,Queue->SizeMask);
000010  7843              LDRB     r3,[r0,#1]
000012  1c5b              ADDS     r3,r3,#1
000014  4013              ANDS     r3,r3,r2
000016  7043              STRB     r3,[r0,#1]
;;;41     		FIFO_BUF(Queue)[Queue->Head] = data;
000018  7842              LDRB     r2,[r0,#1]
00001a  1cc0              ADDS     r0,r0,#3
00001c  5411              STRB     r1,[r2,r0]
;;;42     		return 1;	
;;;43     	}
;;;44     	return 0;
;;;45     }
00001e  bc10              POP      {r4}
000020  2001              MOVS     r0,#1                 ;42
000022  4770              BX       lr
                  |L4.36|
000024  bc10              POP      {r4}
000026  2000              MOVS     r0,#0                 ;44
000028  4770              BX       lr
;;;46     
                          ENDP


                          AREA ||i.FIFO_WriteAvail||, CODE, READONLY, ALIGN=1

                  FIFO_WriteAvail PROC
;;;30     
;;;31     uint8_t FIFO_WriteAvail(FIFO *Queue)
000000  7841              LDRB     r1,[r0,#1]
;;;32     {
;;;33       return(FIFO_INC(Queue->Head,Queue->SizeMask)!=Queue->Tail);
000002  7802              LDRB     r2,[r0,#0]
000004  1c49              ADDS     r1,r1,#1
000006  7880              LDRB     r0,[r0,#2]
000008  4011              ANDS     r1,r1,r2
00000a  4281              CMP      r1,r0
00000c  d001              BEQ      |L5.18|
00000e  2001              MOVS     r0,#1
;;;34     }
000010  4770              BX       lr
                  |L5.18|
000012  2000              MOVS     r0,#0                 ;33
000014  4770              BX       lr
;;;35     
                          ENDP


                          AREA ||i.Getc||, CODE, READONLY, ALIGN=1

                  Getc PROC
                  |L6.0|
;;;62     
;;;63     uint8_t Getc(FIFO *Queue)
000000  7841              LDRB     r1,[r0,#1]
000002  7882              LDRB     r2,[r0,#2]
000004  4291              CMP      r1,r2
000006  d0fb              BEQ      |L6.0|
000008  7881              LDRB     r1,[r0,#2]
00000a  7802              LDRB     r2,[r0,#0]
00000c  1c49              ADDS     r1,r1,#1
00000e  4011              ANDS     r1,r1,r2
000010  7081              STRB     r1,[r0,#2]
000012  7881              LDRB     r1,[r0,#2]
000014  1cc0              ADDS     r0,r0,#3
000016  5c08              LDRB     r0,[r1,r0]
;;;64     {
;;;65     	uint8_t ch;
;;;66     	
;;;67     	while(!FIFO_Read(Queue,&ch))
;;;68     	  /* busy wait */;
;;;69     	
;;;70     	return ch;
;;;71     }
000018  4770              BX       lr
;;;72     
                          ENDP


                          AREA ||i.Getc_Timeout||, CODE, READONLY, ALIGN=2

                  Getc_Timeout PROC
;;;72     
;;;73     uint8_t Getc_Timeout(FIFO *Queue, FIFO_Data_t *data, uint16_t Timeout)
000000  b470              PUSH     {r4-r6}
;;;74     {
;;;75     	MicroTimer0=Timeout;
000002  4c0f              LDR      r4,|L7.64|
000004  7022              STRB     r2,[r4,#0]
000006  7845              LDRB     r5,[r0,#1]
000008  7886              LDRB     r6,[r0,#2]
00000a  1cc3              ADDS     r3,r0,#3
00000c  42b5              CMP      r5,r6
00000e  d108              BNE      |L7.34|
                  |L7.16|
;;;76     	
;;;77     	while(!FIFO_Read(Queue,data))
;;;78     	{
;;;79     		if((Timeout!= TIME_INFINITE)&& !MicroTimer0)
000010  2a00              CMP      r2,#0
000012  d002              BEQ      |L7.26|
000014  7825              LDRB     r5,[r4,#0]  ; MicroTimer0
000016  2d00              CMP      r5,#0
000018  d00e              BEQ      |L7.56|
                  |L7.26|
00001a  7845              LDRB     r5,[r0,#1]
00001c  7886              LDRB     r6,[r0,#2]
00001e  42b5              CMP      r5,r6
000020  d0f6              BEQ      |L7.16|
                  |L7.34|
000022  7882              LDRB     r2,[r0,#2]
000024  7804              LDRB     r4,[r0,#0]
000026  1c52              ADDS     r2,r2,#1
000028  4022              ANDS     r2,r2,r4
00002a  7082              STRB     r2,[r0,#2]
00002c  7880              LDRB     r0,[r0,#2]
00002e  5cc0              LDRB     r0,[r0,r3]
000030  7008              STRB     r0,[r1,#0]
;;;80     			return 0;
;;;81     	}
;;;82     	
;;;83     	return 1;
;;;84     }
000032  bc70              POP      {r4-r6}
000034  2001              MOVS     r0,#1                 ;83
000036  4770              BX       lr
                  |L7.56|
000038  bc70              POP      {r4-r6}
00003a  2000              MOVS     r0,#0                 ;80
00003c  4770              BX       lr
                          ENDP

00003e  0000              DCW      0x0000
                  |L7.64|
                          DCD      MicroTimer0

;*** Start embedded assembler ***

#line 1 "fifo.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_fifo_c_4024f70a____REV16|
#line 129 "C:\\CAD\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_fifo_c_4024f70a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_fifo_c_4024f70a____REVSH|
#line 144
|__asm___6_fifo_c_4024f70a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
