; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\rcc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\rcc.d --cpu=Cortex-M0 --apcs=interwork -O3 -Otime --diag_suppress=9931 -IC:\CAD\Keil_v5\ARM\RV31\INC -IC:\CAD\Keil_v5\ARM\CMSIS\Include -IC:\CAD\Keil_v5\ARM\Inc\ST\STM32F0xx -D__UVISION_VERSION=514 -DSTM32F030 --omf_browse=.\objects\rcc.crf rcc.c]
                          THUMB

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;28     
;;;29     void SystemInit(void)
000000  4911              LDR      r1,|L1.72|
;;;30     {
;;;31     	// Change FLASH prefetch = on, wait state to 1
;;;32     	FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
000002  2011              MOVS     r0,#0x11
000004  6008              STR      r0,[r1,#0]
;;;33     
;;;34     	//Set PLL to 50MHz with external 25MHz OSC	
;;;35     #ifdef HSE
;;;36     	// SYSCLK = HSE * 2 = 50MHz
;;;37     	RCC->CR |= RCC_CR_HSEON|HSE_BYPASS;
000006  4811              LDR      r0,|L1.76|
000008  6801              LDR      r1,[r0,#0]
00000a  2201              MOVS     r2,#1
00000c  0412              LSLS     r2,r2,#16
00000e  4311              ORRS     r1,r1,r2
000010  6001              STR      r1,[r0,#0]
                  |L1.18|
;;;38     	
;;;39     	while(!(RCC->CR & RCC_CR_HSERDY))
000012  6801              LDR      r1,[r0,#0]
000014  0389              LSLS     r1,r1,#14
000016  d5fc              BPL      |L1.18|
;;;40     		/* wait for HSE ready*/;
;;;41     	
;;;42     	// PLL Src = HSE, Multiplier = x2
;;;43     	RCC->CFGR = RCC_CFGR_PLLSRC_1|CFGR_PLL_MULT;
000018  6042              STR      r2,[r0,#4]
;;;44     	RCC->CR |= RCC_CR_PLLON;
00001a  6801              LDR      r1,[r0,#0]
00001c  2201              MOVS     r2,#1
00001e  0612              LSLS     r2,r2,#24
000020  4311              ORRS     r1,r1,r2
000022  6001              STR      r1,[r0,#0]
                  |L1.36|
;;;45     	
;;;46     	// Wait for PLL ready
;;;47     	while(!(RCC->CR & RCC_CR_PLLRDY))
000024  6801              LDR      r1,[r0,#0]
000026  0189              LSLS     r1,r1,#6
000028  d5fc              BPL      |L1.36|
;;;48     		;
;;;49     	// Switch to PLL as clock source
;;;50     	RCC->CFGR |= RCC_CFGR_SW_PLL;
00002a  6841              LDR      r1,[r0,#4]
00002c  2202              MOVS     r2,#2
00002e  4311              ORRS     r1,r1,r2
000030  6041              STR      r1,[r0,#4]
                  |L1.50|
;;;51     	
;;;52     	// wait for clock switching
;;;53     	while((RCC->CFGR & RCC_CFGR_SWS)!= RCC_CFGR_SWS_PLL)
000032  6841              LDR      r1,[r0,#4]
000034  0709              LSLS     r1,r1,#28
000036  0f89              LSRS     r1,r1,#30
000038  2902              CMP      r1,#2
00003a  d1fa              BNE      |L1.50|
;;;54     	 ;
;;;55     	
;;;56     	// Turn off HSI
;;;57     	RCC->CR &= ~RCC_CR_HSION;
00003c  6801              LDR      r1,[r0,#0]
00003e  0849              LSRS     r1,r1,#1
000040  0049              LSLS     r1,r1,#1
000042  6001              STR      r1,[r0,#0]
;;;58     	
;;;59     #else
;;;60     	// SYSCLK = HSI/2 * CLK_PLL_MULT (13 for 50.5MHz)
;;;61     	// Trim HSI down to about 3.87MHz
;;;62     	// dotclock = 25.16MHz on mine
;;;63     
;;;64     	RCC->CFGR = CFGR_PLL_MULT;
;;;65     	RCC->CR = (RCC->CR & ~RCC_CR_HSITRIM)|(HSI_TRIM<<3)|RCC_CR_PLLON;
;;;66     	
;;;67     	// Wait for PLL ready
;;;68     	while(!(RCC->CR & RCC_CR_PLLRDY))
;;;69     		;
;;;70     	// Switch to PLL as clock source
;;;71     	RCC->CFGR |= RCC_CFGR_SW_PLL;
;;;72     	
;;;73     	// wait for clock switching
;;;74     	while((RCC->CFGR & RCC_CFGR_SWS)!= RCC_CFGR_SWS_PLL)
;;;75     	 ;
;;;76     #endif
;;;77     }
000044  4770              BX       lr
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      0x40022000
                  |L1.76|
                          DCD      0x40021000

;*** Start embedded assembler ***

#line 1 "rcc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_rcc_c_a9c8fbbb____REV16|
#line 129 "C:\\CAD\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_rcc_c_a9c8fbbb____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_rcc_c_a9c8fbbb____REVSH|
#line 144
|__asm___5_rcc_c_a9c8fbbb____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
